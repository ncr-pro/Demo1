<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-28T22:38:08 IST" name="Suite" finished-at="2022-04-28T22:39:06 IST" duration-ms="58013">
    <groups>
    </groups>
    <test started-at="2022-04-28T22:38:08 IST" name="TestTwo" finished-at="2022-04-28T22:38:23 IST" duration-ms="14559">
      <class name="demo.framework.test.TwoTest">
        <test-method signature="testtwo()[pri:0, instance:demo.framework.test.TwoTest@31ea9581]" started-at="2022-04-28T22:38:08 IST" name="testtwo" finished-at="2022-04-28T22:38:23 IST" duration-ms="14508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testtwo -->
      </class> <!-- demo.framework.test.TwoTest -->
    </test> <!-- TestTwo -->
    <test started-at="2022-04-28T22:38:23 IST" name="TestFour" finished-at="2022-04-28T22:38:35 IST" duration-ms="11960">
      <class name="demo.framework.test.FourTest">
        <test-method signature="fourtest()[pri:0, instance:demo.framework.test.FourTest@2dfaea86]" started-at="2022-04-28T22:38:23 IST" name="fourtest" finished-at="2022-04-28T22:38:31 IST" duration-ms="7488" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at demo.framework.test.FourTest.fourtest(FourTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourtest -->
        <test-method is-config="true" signature="closeMethod()[pri:0, instance:demo.framework.test.FourTest@2dfaea86]" started-at="2022-04-28T22:38:31 IST" name="closeMethod" finished-at="2022-04-28T22:38:35 IST" duration-ms="4297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeMethod -->
      </class> <!-- demo.framework.test.FourTest -->
    </test> <!-- TestFour -->
    <test started-at="2022-04-28T22:38:35 IST" name="TestThree" finished-at="2022-04-28T22:38:48 IST" duration-ms="13022">
      <class name="demo.framework.test.ThreeTest">
        <test-method signature="threeTest()[pri:0, instance:demo.framework.test.ThreeTest@7a6d7e92]" started-at="2022-04-28T22:38:35 IST" name="threeTest" finished-at="2022-04-28T22:38:48 IST" duration-ms="13018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- threeTest -->
      </class> <!-- demo.framework.test.ThreeTest -->
    </test> <!-- TestThree -->
    <test started-at="2022-04-28T22:38:48 IST" name="TestLogin" finished-at="2022-04-28T22:39:06 IST" duration-ms="17798">
      <class name="demo.framework.test.LogicTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:demo.framework.test.LogicTest@5340477f]" started-at="2022-04-28T22:38:48 IST" name="openApplication" finished-at="2022-04-28T22:38:54 IST" duration-ms="5074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:demo.framework.test.LogicTest@5340477f]" started-at="2022-04-28T22:38:54 IST" name="login" data-provider="getLoginData" finished-at="2022-04-28T22:38:55 IST" duration-ms="1273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arun.selenium@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Second@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[successfull]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:demo.framework.test.LogicTest@5340477f]" started-at="2022-04-28T22:38:55 IST" name="closure" finished-at="2022-04-28T22:38:55 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:demo.framework.test.LogicTest@5340477f]" started-at="2022-04-28T22:38:55 IST" name="openApplication" finished-at="2022-04-28T22:39:00 IST" duration-ms="5026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:demo.framework.test.LogicTest@5340477f]" started-at="2022-04-28T22:39:00 IST" name="login" data-provider="getLoginData" finished-at="2022-04-28T22:39:06 IST" duration-ms="6101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dummy@test.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dummy]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closure()[pri:0, instance:demo.framework.test.LogicTest@5340477f]" started-at="2022-04-28T22:39:06 IST" name="closure" finished-at="2022-04-28T22:39:06 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
      </class> <!-- demo.framework.test.LogicTest -->
    </test> <!-- TestLogin -->
  </suite> <!-- Suite -->
</testng-results>
